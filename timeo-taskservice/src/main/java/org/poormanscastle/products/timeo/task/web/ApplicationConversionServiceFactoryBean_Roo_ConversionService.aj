// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package org.poormanscastle.products.timeo.task.web;

import org.poormanscastle.products.timeo.task.domain.Activity;
import org.poormanscastle.products.timeo.task.domain.Goal;
import org.poormanscastle.products.timeo.task.domain.Priority;
import org.poormanscastle.products.timeo.task.domain.Project;
import org.poormanscastle.products.timeo.task.domain.ProjectStatus;
import org.poormanscastle.products.timeo.task.domain.ProjectTeamMember;
import org.poormanscastle.products.timeo.task.domain.Status;
import org.poormanscastle.products.timeo.task.domain.Task;
import org.poormanscastle.products.timeo.task.domain.TimeoRole;
import org.poormanscastle.products.timeo.task.web.ApplicationConversionServiceFactoryBean;
import org.springframework.beans.factory.annotation.Configurable;
import org.springframework.core.convert.converter.Converter;
import org.springframework.format.FormatterRegistry;

privileged aspect ApplicationConversionServiceFactoryBean_Roo_ConversionService {
    
    declare @type: ApplicationConversionServiceFactoryBean: @Configurable;
    
    public Converter<Activity, String> ApplicationConversionServiceFactoryBean.getActivityToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<org.poormanscastle.products.timeo.task.domain.Activity, java.lang.String>() {
            public String convert(Activity activity) {
                return new StringBuilder().append(activity.getComment()).append(' ').append(activity.getStartDateTime()).append(' ').append(activity.getEndDateTime()).toString();
            }
        };
    }
    
    public Converter<String, Activity> ApplicationConversionServiceFactoryBean.getIdToActivityConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, org.poormanscastle.products.timeo.task.domain.Activity>() {
            public org.poormanscastle.products.timeo.task.domain.Activity convert(java.lang.String id) {
                return Activity.findActivity(id);
            }
        };
    }
    
    public Converter<Goal, String> ApplicationConversionServiceFactoryBean.getGoalToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<org.poormanscastle.products.timeo.task.domain.Goal, java.lang.String>() {
            public String convert(Goal goal) {
                return new StringBuilder().append(goal.getName()).append(' ').append(goal.getDescription()).toString();
            }
        };
    }
    
    public Converter<String, Goal> ApplicationConversionServiceFactoryBean.getIdToGoalConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, org.poormanscastle.products.timeo.task.domain.Goal>() {
            public org.poormanscastle.products.timeo.task.domain.Goal convert(java.lang.String id) {
                return Goal.findGoal(id);
            }
        };
    }
    
    public Converter<Priority, String> ApplicationConversionServiceFactoryBean.getPriorityToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<org.poormanscastle.products.timeo.task.domain.Priority, java.lang.String>() {
            public String convert(Priority priority) {
                return new StringBuilder().append(priority.getName()).append(' ').append(priority.getDescription()).toString();
            }
        };
    }
    
    public Converter<String, Priority> ApplicationConversionServiceFactoryBean.getIdToPriorityConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, org.poormanscastle.products.timeo.task.domain.Priority>() {
            public org.poormanscastle.products.timeo.task.domain.Priority convert(java.lang.String id) {
                return Priority.findPriority(id);
            }
        };
    }
    
    public Converter<Project, String> ApplicationConversionServiceFactoryBean.getProjectToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<org.poormanscastle.products.timeo.task.domain.Project, java.lang.String>() {
            public String convert(Project project) {
                return new StringBuilder().append(project.getName()).append(' ').append(project.getDescription()).append(' ').append(project.getEntryDate()).append(' ').append(project.getDueDate()).toString();
            }
        };
    }
    
    public Converter<String, Project> ApplicationConversionServiceFactoryBean.getIdToProjectConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, org.poormanscastle.products.timeo.task.domain.Project>() {
            public org.poormanscastle.products.timeo.task.domain.Project convert(java.lang.String id) {
                return Project.findProject(id);
            }
        };
    }
    
    public Converter<ProjectStatus, String> ApplicationConversionServiceFactoryBean.getProjectStatusToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<org.poormanscastle.products.timeo.task.domain.ProjectStatus, java.lang.String>() {
            public String convert(ProjectStatus projectStatus) {
                return new StringBuilder().append(projectStatus.getName()).append(' ').append(projectStatus.getDescription()).toString();
            }
        };
    }
    
    public Converter<String, ProjectStatus> ApplicationConversionServiceFactoryBean.getIdToProjectStatusConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, org.poormanscastle.products.timeo.task.domain.ProjectStatus>() {
            public org.poormanscastle.products.timeo.task.domain.ProjectStatus convert(java.lang.String id) {
                return ProjectStatus.findProjectStatus(id);
            }
        };
    }
    
    public Converter<ProjectTeamMember, String> ApplicationConversionServiceFactoryBean.getProjectTeamMemberToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<org.poormanscastle.products.timeo.task.domain.ProjectTeamMember, java.lang.String>() {
            public String convert(ProjectTeamMember projectTeamMember) {
                return new StringBuilder().append(projectTeamMember.getResourceId()).append(' ').append(projectTeamMember.getLabel()).toString();
            }
        };
    }
    
    public Converter<String, ProjectTeamMember> ApplicationConversionServiceFactoryBean.getIdToProjectTeamMemberConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, org.poormanscastle.products.timeo.task.domain.ProjectTeamMember>() {
            public org.poormanscastle.products.timeo.task.domain.ProjectTeamMember convert(java.lang.String id) {
                return ProjectTeamMember.findProjectTeamMember(id);
            }
        };
    }
    
    public Converter<Status, String> ApplicationConversionServiceFactoryBean.getStatusToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<org.poormanscastle.products.timeo.task.domain.Status, java.lang.String>() {
            public String convert(Status status) {
                return new StringBuilder().append(status.getName()).append(' ').append(status.getDescription()).toString();
            }
        };
    }
    
    public Converter<String, Status> ApplicationConversionServiceFactoryBean.getIdToStatusConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, org.poormanscastle.products.timeo.task.domain.Status>() {
            public org.poormanscastle.products.timeo.task.domain.Status convert(java.lang.String id) {
                return Status.findStatus(id);
            }
        };
    }
    
    public Converter<Task, String> ApplicationConversionServiceFactoryBean.getTaskToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<org.poormanscastle.products.timeo.task.domain.Task, java.lang.String>() {
            public String convert(Task task) {
                return new StringBuilder().append(task.getName()).append(' ').append(task.getDescription()).append(' ').append(task.getComment()).append(' ').append(task.getEffortEstimation()).toString();
            }
        };
    }
    
    public Converter<String, Task> ApplicationConversionServiceFactoryBean.getIdToTaskConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, org.poormanscastle.products.timeo.task.domain.Task>() {
            public org.poormanscastle.products.timeo.task.domain.Task convert(java.lang.String id) {
                return Task.findTask(id);
            }
        };
    }
    
    public Converter<TimeoRole, String> ApplicationConversionServiceFactoryBean.getTimeoRoleToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<org.poormanscastle.products.timeo.task.domain.TimeoRole, java.lang.String>() {
            public String convert(TimeoRole timeoRole) {
                return new StringBuilder().append(timeoRole.getName()).append(' ').append(timeoRole.getDescription()).toString();
            }
        };
    }
    
    public Converter<String, TimeoRole> ApplicationConversionServiceFactoryBean.getIdToTimeoRoleConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, org.poormanscastle.products.timeo.task.domain.TimeoRole>() {
            public org.poormanscastle.products.timeo.task.domain.TimeoRole convert(java.lang.String id) {
                return TimeoRole.findTimeoRole(id);
            }
        };
    }
    
    public void ApplicationConversionServiceFactoryBean.installLabelConverters(FormatterRegistry registry) {
        registry.addConverter(getActivityToStringConverter());
        registry.addConverter(getIdToActivityConverter());
        registry.addConverter(getGoalToStringConverter());
        registry.addConverter(getIdToGoalConverter());
        registry.addConverter(getPriorityToStringConverter());
        registry.addConverter(getIdToPriorityConverter());
        registry.addConverter(getProjectToStringConverter());
        registry.addConverter(getIdToProjectConverter());
        registry.addConverter(getProjectStatusToStringConverter());
        registry.addConverter(getIdToProjectStatusConverter());
        registry.addConverter(getProjectTeamMemberToStringConverter());
        registry.addConverter(getIdToProjectTeamMemberConverter());
        registry.addConverter(getStatusToStringConverter());
        registry.addConverter(getIdToStatusConverter());
        registry.addConverter(getTaskToStringConverter());
        registry.addConverter(getIdToTaskConverter());
        registry.addConverter(getTimeoRoleToStringConverter());
        registry.addConverter(getIdToTimeoRoleConverter());
    }
    
    public void ApplicationConversionServiceFactoryBean.afterPropertiesSet() {
        super.afterPropertiesSet();
        installLabelConverters(getObject());
    }
    
}
